Title,Labels,Type,Description
1. Lift and Shift the <acme> application to Spring Boot,replatform,feature,"	AS an ANCHOR
I WANT to create a Spring Boot application using <acme> application codebase using the _lift_ and _shift_ technique,
BECAUSE I want to build/run the _replatformed_ <acme> application locally on the paring stations.

***Acceptance Criteria***
- the _entire codebase_ of the <acme> application be migrated into the Spring Boot application.
- verify the Spring Boot application can be built with _minimum code changes_ and, run locally on the paring stations.
- the _minimum code changes_ should be documented in this tracker ticket.
"
"2. Code Organization, Dependency Management and Compilation of the <acme> Spring Boot app",replatform,feature,"	AS an ANCHOR
I WANT to ensure:
1. the codebase is organized in a Maven structure.
2. dependencies for the builds are available from _non local_ artifact repositories (_Nexus, Artifactory, S3_).
3. codebase can be built successfully _locally_ in the developer paring stations using _maven_ or _gradle_.

BECAUSE I want a standard codebase structure and build mechanism.

***Acceptance Criteria***
- verify there are **NO** _local_ repositories defined in `pom.xml`.
- verify use of remote artifact repositories to resolve dependencies.
- application can be build successfully into a deployable package using _maven or gradle CLI_ on the paring stations.
"
3. Setup Github Repo,replatform,feature,"	AS an Anchor
I WANT to setup repository in client's local or external Github to store codebase for the replatformed <acme> application
BECAUSE I want a standard SCM mechanism for the codebase.

***Acceptance Criteria***
- a Github repository containing a markdown file with the project overview and source code for the replatformed <acme> application.
- all Pivots and Clients on the project have the _full access_ to the repository."
4. Migrate application properties/settings,replatform,feature,"	AS an ANCHOR
I WANT to migrate all the properties/settings of the <acme> application to the Spring Boot's `application.yml`
BECAUSE I want all the application-specific properties to be stored in a _single file_ in the yml format.

***Acceptance Criteria***
- all properties must be defined in the `application.yml`.
- `application.properties` should **not** exist in the codebase.
- any property that will change during deployment should be specified in the `manifest.yml`.
- a recipe outlining the techniques used in the migration of properties must be created and reviewed with the team.  "
5. Migrate to Cloud Native Logging,replatform,feature,"	AS an ANCHOR
I WANT to configure the <acme> Spring Boot app to support _cloud native logging_  
BECAUSE I want the <acme> Spring Boot app to be _12 Factor_ compliant for Logging

***Acceptance Criteria***
- <acme> Spring Boot app should _only_ write to **STDOUT**.
- _logging facade_ used instead of specific logging implementation.
- NO logging to files on local or remote filesystems.
- a consistent log format across the entire <acme> Spring Boot app."
6. Migrate JNDI configurations,replatform,feature,"	AS an ANCHOR
I WANT to migrate JNDI items from the existing <acme> app to the <acme> Spring Boot app
BECAUSE I want to configure JNDI items as Spring beans in the <acme> Spring Boot app to enable _auto detection and wiring_

***Acceptance Criteria***
- **NO** JNDI use in the <acme> Spring Boot app.
- all the JNDI items are defined as individual bean(s) using @Bean annotation inside one or more Configuration class."
7. Migrate Database Configurations,replatform,feature,"	AS an ANCHOR
I WANT to migrate database configurations (_datasources, properties_ etc) from the existing <acme> app to the <acme> Spring Boot app
BECAUSE I want to configure database configurations as Spring beans in the <acme> Spring Boot app to enable _auto detection and wiring_

***Acceptance Criteria***

- NO JNDI-based datasources exists in the <acme> Spring Boot app.
- all the datasources are defined as individual bean(s) using @Bean annotation inside one or more Configuration class.
- the _database connections_ and _driver properties_ are defined in the `application.yml`"
8. Migrate Messaging Configurations,replatform,feature,"	AS an ANCHOR
I WANT to migrate messaging components (_connections, properties, templates, transformers_ etc) from the existing <acme> app to the <acme> Spring Boot app
BECAUSE I want to configure messaging components as Spring beans in the <acme> Spring Boot app to enable _auto detection and wiring_

***Acceptance Criteria***

- NO JNDI-based messaging components exist in the <acme> Spring Boot app.
- all the messaging components are defined as individual bean(s) using @Bean annotation inside one or more Configuration class.
- the messaging _connections/properties_ are defined in the `application.yml`.
- leverage the Spring JMS template support in Spring Boot. "
9. Migrate Security Configurations,replatform,feature,"	AS an ANCHOR
I WANT to migrate security configurations (_certificates, encryption methods, public/private keys, properties_ etc) from the existing <acme> app to the <acme> Spring Boot app
BECAUSE I want to configure security configurations as per Spring Security framework in the <acme> Spring Boot app.

***Acceptance Criteria***
- NO _custom_ security configurations exists in the <acme> Spring Boot app.
- the RBAC in the existing <acme> app is implemented in the <acme> Spring Boot app."
10. Configure actuator/health-checks,replatform,feature,"	AS an ANCHOR
I WANT to expose operational (_health, metrics, info, dump, env_) information of the <acme> Spring Boot app
BECAUSE I want to monitor the application/database state, gather metrics and understand traffic for the <acme> Spring Boot app.

***Acceptance Criteria***
- <acme> Spring Boot application uses Spring Boot 2.x Actuator
-  /health and /info are the only enabled endpoints by default.
- /health will display only the _Status: UP or DOWN_ for unauthorized access over HTTP.
- /info will display the _application name, description and version_."
11. Manual deploy of the <acme> Spring Boot app to PCF,replatform,feature,"	AS an Anchor
I WANT to build the application using maven or gradle and, deploy the application to the PCF using CF CLI from the paring station.
BECAUSE I want to ensure the build/deploy from the paring stations is successful _before replatforming_.

***Acceptance Criteria***
- _local_ maven build on the paring station.
- _deploy_ to Clients's PCF using CF CLI from the paring station.
- _verify_ the application was deployed successfully using the PCF App Console.
- verify the app is _receiving_ traffic by accessing actuator url or index/landing page."
"12. Unit, Integration and Smoke Tests for the <acme> Spring Boot app",replatform,feature,"	AS an ANCHOR
I WANT to create unit, integration, functional and smoke tests for the <acme> Spring Boot app
BECAUSE I want to incorporate TDD principles, improve code quality and test coverage for the <acme> Spring Boot app.

***Acceptance Criteria***
- the tests follow the _given_, _when_, _then_ format.
- the unit, integration and functional tests can be executed independently or as a group.
- the unit tests use _mocks_ and _stubs_ for dependencies. 
- unit, integration and functional tests exist in separate modules in the codebase."
13. Enable Code Quality Checks for the <acme> Spring Boot app,replatform,feature,"	AS an ANCHOR
I WANT to incorporate code quality check for the <acme> Spring Boot app codebase
BECAUSE I want to measure _code coverage_, _cyclomatic complexity_ and, detect _possible bugs_, _suboptimal codes_ and other _bad practices_.

***Acceptance Criteria***
- the code coverage and cyclomatic complexity report is automatically generated for each build.
- static code analysis is also automatically executed for each build.
- the builds _should fail_ if the code coverage is _below_ a specified threshold.
"
14. Build/deploy <acme> Spring Boot app WITHOUT the CI/CD pipeline,replatform,feature,"		AS an Anchor
I SHOULD be able to build the application using maven or gradle and, deploy the application to the PCF using CF CLI from the paring station.
BECAUSE I want to ensure the build/deploy from the paring stations is successful.

***Acceptance Criteria***
- _local_ maven build on the paring station.
- _deploy_ to Clients's PCF using CF CLI from the paring station.
- _verify_ the application was deployed successfully using the PCF App Console.
- verify the app is receiving traffic by accessing actuator url OR the index/landing page.
"
15. Setup CI/CD Pipeline for the <acme> Spring Boot app,replatform,feature,"	AS an Anchor
I SHOULD have the ability for automated build and deploy of the the <acme> Spring Boot app to PCF using CI/CD
BECAUSE I want to ensure the automated build/deploy pipelines are configured and tested before regular use.

***Acceptance Criteria***
- codebase is under SCM (_Git or Git variants_).
- dependencies managed throught artifacts repository (_Artifactory, Nexus or S3_).
- CI/CD tools (_Concourse_ or _Jenkins_ ) uses the application-specific github repo and maven/gradle.
- verify build and deploy to PCF _with_ manual intervention.
- verify build and deploy to PCF _without_ manual intervention.
- verify the application was deployed successfully using the PCF App Console.
- verify the app is receiving traffic by accessing actuator url OR the index/landing page.

**Implementation notes**
- Spring Cloud tools and migration details will come here"
16. Automatic build/deploy to PCF for the <acme> Spring Boot app,replatform,feature,"	AS an Anchor
I SHOULD have the ability for automated build and deployment of the <acme> Spring Boot app to PCF
BECAUSE I want to eliminate the manual build/deploy process for the <acme> Spring Boot app.

***Acceptance Criteria***
- build and deploy the <acme> Spring Boot app to PCF using CI/CD pipelines without _manual intervention_.
- verify the <acme> Spring Boot app was _deployed successfully_ using the PCF App Console.
- verify the <acme> Spring Boot app is _receiving traffic_ by accessing actuator url OR the index/landing page."